<Project>
  <!-- Allows cleaning up the output path from assets from packages based on their CopyLocal metadata
       or explicit CopyLocalPackageId items.
       Ensures only those packages with CopyLocal will remain in the output path.
  -->

  <Target Name="_EnsureCopyLocalAssemblies" AfterTargets="ResolvePackageAssets" DependsOnTargets="_CollectCopyLocalPackageIds;_AnnotateCopyLocalItems;_RemoveNonCopyLocalItems" />

  <Target Name="_CollectCopyLocalPackageIds">
    <ItemGroup>
      <CopyLocalPackageId Include="@(PackageReference -> WithMetadataValue('CopyLocal', 'true'))" />
    </ItemGroup>
  </Target>

  <Target Name="_AnnotateCopyLocalItems" Inputs="@(CopyLocalPackageId)" Outputs="%(CopyLocalPackageId.Identity)-BATCH">
    <PropertyGroup>
      <_CopyLocalPackageId>@(CopyLocalPackageId)</_CopyLocalPackageId>
    </PropertyGroup>
    <ItemGroup>
      <RuntimeCopyLocalItems Condition="$([MSBuild]::ValueOrDefault('%(RuntimeCopyLocalItems.NuGetPackageId)', '').StartsWith('$(_CopyLocalPackageId)'))">
        <CopyLocal>true</CopyLocal>
      </RuntimeCopyLocalItems>
    </ItemGroup>
  </Target>

  <Target Name="_RemoveNonCopyLocalItems">
    <ItemGroup>
      <RuntimeCopyLocalItems Remove="@(RuntimeCopyLocalItems)" Condition="'%(RuntimeCopyLocalItems.CopyLocal)' != 'true'" />
    </ItemGroup>
  </Target>

  <Target Name="_RemoveLocalizedResources" AfterTargets="ResolvePackageAssets">
    <ItemGroup>
      <ResourceCopyLocalItems Remove="@(ResourceCopyLocalItems)" />
    </ItemGroup>
  </Target>
  
</Project>
