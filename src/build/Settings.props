<Project>

  <PropertyGroup Condition="'$(CI)' == ''">
    <CI>false</CI>
    <CI Condition="'$(TF_BUILD)' == 'true'">true</CI>
  </PropertyGroup>

  <Import Project="Packaging.props" Condition="'$(MSBuildProjectExtension)' == '.nuproj'" />

  <PropertyGroup>
    <SuppressNETCoreSdkPreviewMessage>true</SuppressNETCoreSdkPreviewMessage>
    <ResolveAssemblyWarnOrErrorOnTargetArchitectureMismatch>None</ResolveAssemblyWarnOrErrorOnTargetArchitectureMismatch>
    <LangVersion>Latest</LangVersion>

    <!-- We always target a single framework, so we don't need the added subdir -->
    <AppendTargetFrameworkToOutputPath>false</AppendTargetFrameworkToOutputPath>
    <!-- We never emit runtime-specific assemblies, so opt-out of this. -->
    <AppendRuntimeIdentifierToOutputPath>false</AppendRuntimeIdentifierToOutputPath>

    <AddSyntheticProjectReferencesForSolutionDependencies>false</AddSyntheticProjectReferencesForSolutionDependencies>

    <DefaultItemExcludes>$(DefaultExcludeItems);*.binlog</DefaultItemExcludes>
    <UseSharedCompilation>true</UseSharedCompilation>

    <RootPath>$([MSBuild]::NormalizeDirectory('$(MSBuildThisFileDirectory)..\..'))</RootPath>

    <!-- Don't allow NuGet to fallback to the implicit folder since that generates CI warnings -->
    <DisableImplicitNuGetFallbackFolder>true</DisableImplicitNuGetFallbackFolder>

    <!-- Generate satellite assemblies using Roslyn to avoid some al.exe issues 
        (see https://github.com/dotnet/roslyn/issues/23190 and https://github.com/dotnet/roslyn/issues/23191) -->
    <GenerateSatelliteAssembliesForCore>true</GenerateSatelliteAssembliesForCore>

    <PackOnBuild>true</PackOnBuild>
  </PropertyGroup>
  
  <ItemGroup>
    <!-- We use msbuild.rsp to always generate .binlog for easy build diagnostics. Don't show them in the IDE -->
    <None Remove="*.binlog" />
  </ItemGroup>

  <!-- IsTestProject is set by xunit  -->
  <Import Project="Settings.Tests.props" Condition="'$(IsTestProject)' == 'true'" />

  <!-- Import [project].props if it exists -->
  <Import Project="$(MSBuildProjectDirectory)\$(MSBuildProjectName).props"
          Condition="'$(MSBuildProjectExtension)' != '.props' And Exists('$(MSBuildProjectDirectory)\$(MSBuildProjectName).props')" />
</Project>