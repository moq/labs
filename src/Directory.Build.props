<Project TreatAsLocalProperty="VersionSuffix">

  <PropertyGroup>
    <Authors>kzu</Authors>
    <Copyright>Copyright (C) Daniel Cazzulino $([System.DateTime]::Now.Year). All rights reserved.</Copyright>
    <PackageRequireLicenseAcceptance>false</PackageRequireLicenseAcceptance>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <!--<PackageIcon>icon.png</PackageIcon>-->

    <VersionPrefix>42.42.42</VersionPrefix>
    <VersionSuffix>$(VersionSuffix.Replace('refs/heads/', ''))</VersionSuffix>
    <VersionSuffix Condition="$(VersionSuffix.Contains('refs/pull/'))">$(VersionSuffix.TrimEnd('.0123456789'))</VersionSuffix>
    <VersionSuffix>$(VersionSuffix.Replace('refs/pull/', 'pr'))</VersionSuffix>
    <VersionSuffix>$(VersionSuffix.Replace('/merge', ''))</VersionSuffix>
    <VersionSuffix>$(VersionSuffix.Replace('/', '-'))</VersionSuffix>

    <PublishRepositoryUrl>true</PublishRepositoryUrl>
    <GenerateRepositoryUrlAttribute>true</GenerateRepositoryUrlAttribute>

    <PackageOutputPath Condition="'$(PackageOutputPath)' == ''">$([System.IO.Path]::GetFullPath('$(MSBuildThisFileDirectory)..\bin'))</PackageOutputPath>

    <ProduceReferenceAssembly>false</ProduceReferenceAssembly>
    <DebugType>embedded</DebugType>
    <DebugSymbols>true</DebugSymbols>
    <Nullable>enable</Nullable>

    <DefaultItemExcludes>$(DefaultItemExcludes);*.binlog;*.zip;*.rsp;*.items</DefaultItemExcludes>

    <!-- Use Directory.Packages.props -->
    <ManagePackageVersionsCentrally Condition="'$(ManagePackageVersionsCentrally)' == '' and ('$(MSBuildProjectExtension)' == '.csproj' or '$(MSBuildProjectExtension)' == '.vbproj')">true</ManagePackageVersionsCentrally>

    <RestoreSources>https://pkg.kzu.io/index.json;https://api.nuget.org/v3/index.json;$(RestoreSources)</RestoreSources>
    <RestoreSources Condition="Exists('$(MSBuildThisFileDirectory)..\..\nugetizer\bin\')">$([System.IO.Path]::GetFullPath('$(MSBuildThisFileDirectory)..\..\nugetizer\bin'));$(RestoreSources)</RestoreSources>
    <RestoreSources Condition="Exists('$(MSBuildThisFileDirectory)..\..\stunts\bin\')">$([System.IO.Path]::GetFullPath('$(MSBuildThisFileDirectory)..\..\stunts\bin'));$(RestoreSources)</RestoreSources>

    <AssemblyOriginatorKeyFile>$(MSBuildThisFileDirectory)Moq.snk</AssemblyOriginatorKeyFile>
    <PublicKey>002400000480000094000000060200000024000052534131000400000100010051155fd0ee280be78d81cc979423f1129ec5dd28edce9cd94fd679890639cad54c121ebdb606f8659659cd313d3b3db7fa41e2271158dd602bb0039a142717117fa1f63d93a2d288a1c2f920ec05c4858d344a45d48ebd31c1368ab783596b382b611d8c92f9c1b3d338296aa21b12f3bc9f34de87756100c172c52a24bad2db</PublicKey>
    <PublicKeyToken>00352124762f2aa5</PublicKeyToken>
    <SignAssembly>true</SignAssembly>

    <!-- Allows source control information to always be present in ThisAssembly -->
    <EnableSourceLink>true</EnableSourceLink>
    <EnableSourceControlManagerQueries>true</EnableSourceControlManagerQueries>
    <EmbedUntrackedSources>true</EmbedUntrackedSources>
    <UseSourceLink>true</UseSourceLink>

    <!-- Generate satellite assemblies using csc.exe to avoid some al.exe issues. See https://github.com/dotnet/msbuild/pull/2726 -->
    <GenerateSatelliteAssembliesForCore>true</GenerateSatelliteAssembliesForCore>
  </PropertyGroup>

  <PropertyGroup Label="Preview - To be removed by .NET 5.0 RTW">
    <LangVersion>Preview</LangVersion>
    <SuppressNETCoreSdkPreviewMessage>true</SuppressNETCoreSdkPreviewMessage>
  </PropertyGroup>

  <PropertyGroup Label="CI" Condition="'$(CI)' == ''">
    <CI>false</CI>
    <CI Condition="'$(TF_BUILD)' == 'true' or '$(GITHUB_ACTIONS)' == 'true'">true</CI>
  </PropertyGroup>

  <PropertyGroup>
    <ContinuousIntegrationBuild>$(CI)</ContinuousIntegrationBuild>
    <PackOnBuild Condition="'$(PackOnBuild)' == ''">$(CI)</PackOnBuild>
  </PropertyGroup>

  <ItemGroup Condition="'$(ManagePackageVersionsCentrally)' == 'true'">
    <PackageReference Include="Microsoft.SourceLink.GitHub" PrivateAssets="all" Visible="false" />
    <PackageReference Include="Microsoft.NETFramework.ReferenceAssemblies" PrivateAssets="all" Visible="false" />
    <PackageReference Include="NuGetizer" PrivateAssets="all" Visible="false" />
    <PackageReference Include="ThisAssembly" PrivateAssets="all" Visible="false" />
  </ItemGroup>

  <!-- Will only apply for cross-targeting, will be overriden by common targets typically. 
       This is here for packaging projects only, which upon resolving references from dotnet-nugetize 
       will call GetTargetPath and that would otherwise fail -->
  <Target Name="GetTargetPath" DependsOnTargets="_SetGetTargetPathInnerTarget;DispatchToInnerBuilds" />
  <Target Name="_SetGetTargetPathInnerTarget" Returns="@(InnerOutput)">
    <PropertyGroup  Condition="'$(InnerTargets)' == ''">
      <InnerTargets>GetTargetPath</InnerTargets>
    </PropertyGroup>
  </Target>

</Project>