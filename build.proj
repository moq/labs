<Project Sdk="Microsoft.Build.NoTargets" DefaultTargets="Help" TreatAsLocalProperty="Configuration">
	<Sdk Name="Microsoft.Build.CentralPackageVersions" />

	<PropertyGroup>
    <!-- Configuration to build. Defaults to 'Debug' -->
		<Configuration Condition="'$(Configuration)' == ''">Debug</Configuration>
    <TargetFramework>net472</TargetFramework>
  </PropertyGroup>

  <PropertyGroup Label="Hidden">
    <IntermediateOutputPath>$(RestoreOutputPath)\</IntermediateOutputPath>
    <AdditionalProperties>Configuration=$(Configuration)</AdditionalProperties>
    <Out Condition="'$(Out)' == ''">$(MSBuildProjectDirectory)\out</Out>
    <GitVersionFile>src\GitInfo.txt</GitVersionFile>
    <CentralPackagesFile>$(MSBuildProjectDirectory)\src\Packages.props</CentralPackagesFile>
  </PropertyGroup>

  <ItemGroup>
		<PackageReference Include="xunit.runner.msbuild" />
    <PackageReference Include="CoreBuild.Help" />
  </ItemGroup>

  <ItemDefinitionGroup>
		<Solution>
			<AdditionalProperties>$(AdditionalProperties)</AdditionalProperties>
		</Solution>
	</ItemDefinitionGroup>

	<ItemGroup>
		<Solution Include="src\Moq.sln" />
		<Solution Include="src\Samples\Samples.sln" />
	</ItemGroup>

  <!-- Overwritten after restore -->
  <Target Name="Help" />

  <!-- Configures the local environment and restores dependencies. 
       Also sets up the msbuild.rsp so that running the Help target renders colors appropriately. -->
  <Target Name="Configure" DependsOnTargets="Restore" AfterTargets="Restore">
    <!-- Configure colored console used for Help -->
    <MSBuild Projects="$(MSBuildProjectFullPath)" Properties="ForceBuild=Sure" Targets="ColoredConsole" />
    <Message Text="Run 'msbuild /t:help' to learn more about supported targets and properties." Importance="high" />
  </Target>

  <!-- Builds the repository -->
  <Target Name="Build">
		<Message Text="Building AssemblyVersion=$(AssemblyVersion), PackageVersion=$(PackageVersion)" Importance="high" />
    <MakeDir Directories="$(Out)" Condition="!Exists('$(Out)')" />
    <MSBuild Projects="@(Solution)" Targets="Build" Properties="PackageOutputPath=$(Out)" />
  </Target>

  <!-- Runs all unit tests -->
	<Target Name="Test">
		<ItemGroup>
			<TestAssembly Include="src\**\bin\$(Configuration)\**\*Tests.dll" Exclude="src\**\bin\$(Configuration)\**\*AcceptanceTests.dll" />
		</ItemGroup>
    <xunit Assemblies="@(TestAssembly)" />
	</Target>

  <Target Name="Run" Label="Hidden" />
  
	<Target Name="Acceptance" Label="Hidden">
		<ItemGroup>
			<TestAssembly Include="bin\$(Configuration)\*AcceptanceTests.dll" />
		</ItemGroup>

    <xunit Assemblies="@(TestAssembly)" />
	</Target>

  <!-- Cleans all generated artifacts, including restore information for all solutions -->
	<Target Name="Clean">
		<Exec Command='for /d /r . %%d in (out,bin,obj,.vs) do @if exist "%%d" rd /s/q "%%d"'
		      Condition="'$(OS)' == 'Windows_NT'" />
	</Target>

  <!-- Performs a Clean, followed by Restore and Build. -->
	<Target Name="Rebuild" DependsOnTargets="Clean;Restore;Build" />

  <Target Name="_BeforeRestore" BeforeTargets="Restore">
    <!-- Since our NuGet.config declares this as a source, the folder must exist before restore -->
    <MakeDir Directories="$(TEMP)\packages" Condition="!Exists('$(TEMP)\packages')" />
  </Target>

  <Target Name="_AfterRestore" AfterTargets="Restore">
		<MSBuild Projects="@(Solution)" Targets="Restore" />
	</Target>

	<Import Project="src\build\Version.targets" />
</Project>